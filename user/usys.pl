#!/usr/bin/perl -w

# Generate usys.S, the stubs for syscalls.

print "# generated by usys.pl - do not edit\n";

print "#include \"kernel/syscall.h\"\n";

# 定义一个名为 entry 的子函数，接收一个参数 $name
sub entry {
    # 获取传入的参数 $name
    my $name = shift;
    # 输出全局变量声明，将 $name 声明为全局变量
    print ".global $name\n";
    # 输出标签，以 $name 作为标签名
    print "${name}:\n";
    # 将系统调用号 SYS_$name 加载到寄存器 a7 中
    print " li a7, SYS_${name}\n";
    # 执行系统调用
    print " ecall\n";
    # 函数返回
    print " ret\n";
}

# 调用 entry 函数，传入 "fork" 作为参数
entry("fork");
# 调用 entry 函数，传入 "exit" 作为参数
entry("exit");
# 调用 entry 函数，传入 "wait" 作为参数
entry("wait");
# 调用 entry 函数，传入 "pipe" 作为参数
entry("pipe");
# 调用 entry 函数，传入 "read" 作为参数
entry("read");
# 调用 entry 函数，传入 "write" 作为参数
entry("write");
# 调用 entry 函数，传入 "close" 作为参数
entry("close");
# 调用 entry 函数，传入 "kill" 作为参数
entry("kill");
# 调用 entry 函数，传入 "exec" 作为参数
entry("exec");
# 调用 entry 函数，传入 "open" 作为参数
entry("open");
# 调用 entry 函数，传入 "mknod" 作为参数
entry("mknod");
# 调用 entry 函数，传入 "unlink" 作为参数
entry("unlink");
# 调用 entry 函数，传入 "fstat" 作为参数
entry("fstat");
# 调用 entry 函数，传入 "link" 作为参数
entry("link");
# 调用 entry 函数，传入 "mkdir" 作为参数
entry("mkdir");
# 调用 entry 函数，传入 "chdir" 作为参数
entry("chdir");
# 调用 entry 函数，传入 "dup" 作为参数
entry("dup");
# 调用 entry 函数，传入 "getpid" 作为参数
entry("getpid");
# 调用 entry 函数，传入 "sbrk" 作为参数
entry("sbrk");
# 调用 entry 函数，传入 "sleep" 作为参数
entry("sleep");
# 调用 entry 函数，传入 "uptime" 作为参数
entry("uptime");
